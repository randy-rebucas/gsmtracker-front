MEDICAL CHARTS INCLUDE:
Demographics 			– name, contact information, age, etc.
Developmental History 	– growth charts, motor development, cognitive development, social/emotional development, language development, etc.
Immunization Records 	– vaccinations and dates
Medications
Medical allergies
Surgical history 		– operation dates, reports
	dates
	pre operative diagnoses
	planned procedure
	surgeon
	note

Obstetric history 		– the number of pregnancies, complications, pregnancy outcomes
	dates
	place of delivery/abortion
	duration preg.
	Hrs of Labor
	Type of delivery
	complications mother and/or infant
	sex
	birth weight
	present health
	physician

Family History 			– immediate family health status, the cause of death, common family diseases
	Name
	Relationship
	DOB
	Health Condition (illnesses eg: cancer, diabetes)

Social History 			– past and current occupations, community support, etc.
	tobacco use
	alcohol use
	education
	occupation

Habits 					– alcohol consumption, exercise, diet, smoking, sexual history

MEDICAL ENCOUNTER (to be added on patient chart)
Chief complaint
History of present illness
Physical exam 			(vital signs, organ system overview, etc.)
Assessment and plan 	(diagnosis and treatment)
Orders 					(lab, radiological, etc.)
Prescriptions
Progress notes
Test results 			(lab testing, imaging results, etc.)
-------------------------------------------------------------------------

Sequence of the Physical Examination
Vital signs
General Apperance
Head, Eyes, Ears, Nose and Throat (HEENT)
Neck
Chest (Lungs and Breast)
Heart
Abdomen
Genitourinary system
Rectal examination
extremities
Lymph nodes
Neurologic examination
Skin
---------
providers such as laboratories, specialists, medical imaging facilities, emergency facilities, schools, and pharmacies

Drugs
Conditions
Procedures
Consult
Calculators
virtual consultation

---------
- Blood Pressure
- Peak Flow
- Dietary Intake
- Blood Glucose
- Height
- Exercise
- Weight

-----
Ads
Direct ads
Sponsorships
Selling physical products
Affiliate Links
Selling information products

----------
    firstname
    lastname
    adddress {...}
    record: {
        heights: [
            {
                _id:
                height:
                created
            },
            {
                _id:
                height:
                created
            }
        ]
    }
    procedures: [
        {
            _id
            date
            type: ct scan
        },
        {
            _id
            date
            type: blood test
        }
    ]

clinics
    _id
    name
    city
    physicians [
        {
            _id:
            name:
            address: {...}
        },
        {
            _id:
            name:
            address: {...}
        }
    ]

///////
col.find({}).toArray()
 // creates promise with returned data from previous promise
        .then(data => {
          // creates employees variable to store JSON data form /api/data
          let employees = data;
          // creates empty employeeInfo array
          let employeeInfo = [];
          // loops through data from employee variable
          employees.forEach(employee => {
            // pushes values from employees variable to empty employeeInfo array
            employeeInfo.push([employee.name, parseInt(employee.age)]);
          });
          // creates chart const with employeeInfo array
          const chart = {
            type: 'bar',
            series: [
              {
                values: employeeInfo
              }
            ]
          };
          // renders zingchart to the page
          zingchart.render({
            id: 'chart',
            data: chart,
            height: '100%',
            width: '100%'
          });
        })

 this.data = {
            labels: ["January", "February", "March", "April", "May", "June", "July"],
            datasets: [
                {
                    fillColor: "rgba(220,220,220,0.4)",
                    strokeColor: "rgba(220,220,220,1)",
                    data: [65, 59, 80, 81, 56, 55, 40]
                },
                {
                    fillColor: "rgba(151,187,205,0.4)",
                    strokeColor: "rgba(151,187,205,1)",
                    data: [28, 48, 40, 19, 86, 27, 90]
                }
            ]
        };
